<Window x:Class="SyncIMEStatus.SettingWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:local="clr-namespace:SyncIMEStatus"
        xmlns:helpers="clr-namespace:SyncIMEStatus.Helpers"
        xmlns:forms="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
        mc:Ignorable="d"
        ResizeMode="NoResize"
        SizeToContent="WidthAndHeight"
        Title="Sync IME Status"
        WindowStartupLocation="CenterScreen"
    Background="{DynamicResource SettingWindow}">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ResourceDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <BooleanToVisibilityConverter x:Key="VisibilityConverter"/>

        </ResourceDictionary>
    </Window.Resources>

    <Grid
        x:Name="RootGrid"
        MouseDown="RootGrid_MouseDown"
        TextElement.FontSize="16">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="450"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="600"/>
        </Grid.RowDefinitions>
        <local:CustomListBox
            x:Name="CustomKeysListBox"
            Margin="0, 0, 0, 75"
            BorderThickness="0"
            Background="Transparent"
            SelectionMode="Single"
            SelectedIndex="{Binding CustomKeysSelectedIndex}"
            ItemsSource="{Binding CustomKeys}"
            ItemContainerStyle="{DynamicResource CustomKeysListBoxContainerStyle}"
            ItemTemplate="{DynamicResource CustomKeyListTemplate}">
            <local:CustomListBox.Triggers>
                <EventTrigger RoutedEvent="ListBox.SelectionChanged">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="SpecificSettingsGroupBox"
                                Storyboard.TargetProperty="(GroupBox.RenderTransform).(TranslateTransform.Y)"
                                From="150" To="0" Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation
                                Storyboard.TargetName="SpecificSettingsGroupBox"
                                Storyboard.TargetProperty="Opacity"
                                From="0" To="1" Duration="0:0:0.5">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </local:CustomListBox.Triggers>
        </local:CustomListBox>
        <GroupBox
            x:Name="SpecificSettingsGroupBox"
            Header="Specific key settings"
            Margin="2"
            Opacity="1"
            Visibility="{Binding HasSelection,
                ElementName=CustomKeysListBox,
                Converter={StaticResource VisibilityConverter}}"
            Style="{DynamicResource SpecificSettingsPanelStyle}"
            Grid.Column="1">
            <GroupBox.RenderTransform>
                <TranslateTransform X="0" Y="0"/>
            </GroupBox.RenderTransform>
            <DockPanel
                LastChildFill="False">
                <Border
                    DockPanel.Dock="Top"
                    Height="80"
                    Style="{DynamicResource KeySettingPanelStyle}">
                    <Canvas>
                        <TextBlock
                            Canvas.Left="20"
                            Canvas.Top="7"
                            Text="Modifier Keys"/>
                        <StackPanel
                            Orientation="Horizontal"
                            Canvas.Left="30"
                            Canvas.Top="35">
                            <CheckBox
                                Style="{DynamicResource CheckBoxStyle}"
                                Content="L Ctrl">
                                <CheckBox.IsChecked>
                                    <Binding
                                        Path="SelectedValue.ModifiersAndAdd"
                                        ElementName="CustomKeysListBox"
                                        Converter="{x:Static helpers:FlagsToBooleanConverter.I}"
                                        ConverterParameter="LeftCtrl"
                                        Mode="TwoWay"
                                        UpdateSourceTrigger="PropertyChanged">
                                    </Binding>
                                </CheckBox.IsChecked>
                            </CheckBox>
                            <CheckBox
                                Style="{DynamicResource CheckBoxStyle}"
                                Content="R Ctrl">
                                <CheckBox.IsChecked>
                                    <Binding
                                        Path="SelectedValue.ModifiersAndAdd"
                                        ElementName="CustomKeysListBox"
                                        Converter="{x:Static helpers:FlagsToBooleanConverter.I}"
                                        ConverterParameter="RightCtrl"
                                        Mode="TwoWay"
                                        UpdateSourceTrigger="PropertyChanged">
                                    </Binding>
                                </CheckBox.IsChecked>
                            </CheckBox>
                            <CheckBox
                                Style="{DynamicResource CheckBoxStyle}"
                                Content="L Alt">
                                <CheckBox.IsChecked>
                                    <Binding
                                        Path="SelectedValue.ModifiersAndAdd"
                                        ElementName="CustomKeysListBox"
                                        Converter="{x:Static helpers:FlagsToBooleanConverter.I}"
                                        ConverterParameter="LeftAlt"
                                        Mode="TwoWay"
                                        UpdateSourceTrigger="PropertyChanged">
                                    </Binding>
                                </CheckBox.IsChecked>
                            </CheckBox>
                            <CheckBox
                                Style="{DynamicResource CheckBoxStyle}"
                                Content="R Alt">
                                <CheckBox.IsChecked>
                                    <Binding
                                        Path="SelectedValue.ModifiersAndAdd"
                                        ElementName="CustomKeysListBox"
                                        Converter="{x:Static helpers:FlagsToBooleanConverter.I}"
                                        ConverterParameter="RightAlt"
                                        Mode="TwoWay"
                                        UpdateSourceTrigger="PropertyChanged">
                                    </Binding>
                                </CheckBox.IsChecked>
                            </CheckBox>
                            <CheckBox
                                Style="{DynamicResource CheckBoxStyle}"
                                Content="L Shift">
                                <CheckBox.IsChecked>
                                    <Binding
                                        Path="SelectedValue.ModifiersAndAdd"
                                        ElementName="CustomKeysListBox"
                                        Converter="{x:Static helpers:FlagsToBooleanConverter.I}"
                                        ConverterParameter="LeftShift"
                                        Mode="TwoWay"
                                        UpdateSourceTrigger="PropertyChanged">
                                    </Binding>
                                </CheckBox.IsChecked>
                            </CheckBox>
                            <CheckBox
                                Style="{DynamicResource CheckBoxStyle}"
                                Content="R Shift">
                                <CheckBox.IsChecked>
                                    <Binding
                                        Path="SelectedValue.ModifiersAndAdd"
                                        ElementName="CustomKeysListBox"
                                        Converter="{x:Static helpers:FlagsToBooleanConverter.I}"
                                        ConverterParameter="RightShift"
                                        Mode="TwoWay"
                                        UpdateSourceTrigger="PropertyChanged">
                                    </Binding>
                                </CheckBox.IsChecked>
                            </CheckBox>
                        </StackPanel>
                    </Canvas>
                </Border>
                <Border
                    DockPanel.Dock="Top"
                    Style="{DynamicResource KeySettingPanelStyle}">
                    <Canvas>
                        <ComboBox
                            Canvas.Right="20"
                            Canvas.Top="13"
                            Height="30"
                            Width="180"
                            Style="{DynamicResource KeySettingComboBoxStyle}"
                            ItemsSource="{helpers:EnumTypeSourceBinding {x:Type local:TriggerKeyState}}">
                            <ComboBox.SelectedValue>
                                <helpers:CultureAwareBinding
                                    Path="SelectedValue.TriggerState"
                                    ElementName="CustomKeysListBox"
                                    Mode="TwoWay"
                                    UpdateSourceTrigger="PropertyChanged">
                                </helpers:CultureAwareBinding>
                            </ComboBox.SelectedValue>
                        </ComboBox>
                        <TextBlock
                            Canvas.Left="20"
                            Canvas.Top="18"
                            Text="State of the trigger key"/>
                    </Canvas>
                </Border>
                <Border
                    DockPanel.Dock="Top"
                    Style="{DynamicResource KeySettingPanelStyle}">
                    <Canvas>
                        <ComboBox
                            Canvas.Right="20"
                            Canvas.Top="13"
                            Height="30"
                            Width="180"
                            Style="{DynamicResource KeySettingComboBoxStyle}"
                            ItemsSource="{helpers:EnumTypeSourceBinding {x:Type local:ImeMode}}">
                            <ComboBox.SelectedValue>
                                <helpers:CultureAwareBinding
                                    Path="SelectedValue.ImeMode"
                                    ElementName="CustomKeysListBox"
                                    Mode="TwoWay"
                                    UpdateSourceTrigger="PropertyChanged">
                                </helpers:CultureAwareBinding>
                            </ComboBox.SelectedValue>
                        </ComboBox>
                        <TextBlock
                            Canvas.Left="20"
                            Canvas.Top="18"
                            Text="IME Mode"/>
                    </Canvas>
                </Border>
                <Border
                    DockPanel.Dock="Top"
                    Style="{DynamicResource KeySettingPanelStyle}">
                    <Canvas>
                        <ComboBox
                            Canvas.Right="20"
                            Canvas.Top="13"
                            Height="30"
                            Width="180"
                            Style="{DynamicResource KeySettingComboBoxStyle}"
                            ItemsSource="{helpers:EnumTypeSourceBinding {x:Type local:KeyPassThroughMode}}">
                            <ComboBox.SelectedValue>
                                <helpers:CultureAwareBinding
                                    Path="SelectedValue.PassThroughMode"
                                    ElementName="CustomKeysListBox"
                                    Mode="TwoWay"
                                    UpdateSourceTrigger="PropertyChanged">
                                </helpers:CultureAwareBinding>
                            </ComboBox.SelectedValue>
                        </ComboBox>
                        <TextBlock
                            Canvas.Left="20"
                            Canvas.Top="18"
                            Text="Pass Through Mode"/>
                    </Canvas>
                </Border>
                <TextBox
                    DockPanel.Dock="Top"
                    x:Name="SetReplaceKeyTextBox"
                    Cursor="Arrow"
                    CaretBrush="Transparent"
                    InputMethod.IsInputMethodEnabled="False"
                    GotFocus="SetReplaceKeyTextBox_GotFocus"
                    LostKeyboardFocus="AddCustomKeyTextBox_LostKeyboardFocus"
                    PreviewKeyUp="AddCustomKeyTextBox_PreviewKeyUp"
                    Style="{DynamicResource SetReplaceKeyTextBoxStyle}">
                    <TextBox.Text>
                        <Binding
                            Path="SelectedValue.ReplaceKey"
                            ElementName="CustomKeysListBox"
                            Converter="{x:Static helpers:IntToEnumConverter.I}"
                            ConverterParameter="{x:Type forms:Keys}"
                            Mode="TwoWay"
                            UpdateSourceTrigger="PropertyChanged"/>
                    </TextBox.Text>
                </TextBox>
                <Border
                    DockPanel.Dock="Top"
                    Height="80"
                    Style="{DynamicResource KeySettingPanelStyle}">
                    <Canvas>
                        <TextBlock
                            Canvas.Left="20"
                            Canvas.Top="7"
                            Text="Alternative Modifier Keys"/>
                        <StackPanel
                            Canvas.Left="30"
                            Canvas.Top="35"
                            Orientation="Horizontal">
                            <CheckBox
                                Style="{DynamicResource CheckBoxStyle}"
                                Content="L Ctrl">
                                <CheckBox.IsChecked>
                                    <Binding
                                        Path="SelectedValue.ReplaceModifiersAndAdd"
                                        ElementName="CustomKeysListBox"
                                        Converter="{x:Static helpers:FlagsToBooleanConverter.I}"
                                        ConverterParameter="LeftCtrl"
                                        Mode="TwoWay"
                                        UpdateSourceTrigger="PropertyChanged">
                                    </Binding>
                                </CheckBox.IsChecked>
                            </CheckBox>
                            <CheckBox
                                Style="{DynamicResource CheckBoxStyle}"
                                Content="R Ctrl">
                                <CheckBox.IsChecked>
                                    <Binding
                                        Path="SelectedValue.ReplaceModifiersAndAdd"
                                        ElementName="CustomKeysListBox"
                                        Converter="{x:Static helpers:FlagsToBooleanConverter.I}"
                                        ConverterParameter="RightCtrl"
                                        Mode="TwoWay"
                                        UpdateSourceTrigger="PropertyChanged">
                                    </Binding>
                                </CheckBox.IsChecked>
                            </CheckBox>
                            <CheckBox
                                Style="{DynamicResource CheckBoxStyle}"
                                Content="L Alt">
                                <CheckBox.IsChecked>
                                    <Binding
                                        Path="SelectedValue.ReplaceModifiersAndAdd"
                                        ElementName="CustomKeysListBox"
                                        Converter="{x:Static helpers:FlagsToBooleanConverter.I}"
                                        ConverterParameter="LeftAlt"
                                        Mode="TwoWay"
                                        UpdateSourceTrigger="PropertyChanged">
                                    </Binding>
                                </CheckBox.IsChecked>
                            </CheckBox>
                            <CheckBox
                                Style="{DynamicResource CheckBoxStyle}"
                                Content="R Alt">
                                <CheckBox.IsChecked>
                                    <Binding
                                        Path="SelectedValue.ReplaceModifiersAndAdd"
                                        ElementName="CustomKeysListBox"
                                        Converter="{x:Static helpers:FlagsToBooleanConverter.I}"
                                        ConverterParameter="RightAlt"
                                        Mode="TwoWay"
                                        UpdateSourceTrigger="PropertyChanged">
                                    </Binding>
                                </CheckBox.IsChecked>
                            </CheckBox>
                            <CheckBox
                                Style="{DynamicResource CheckBoxStyle}"
                                Content="L Shift">
                                <CheckBox.IsChecked>
                                    <Binding
                                        Path="SelectedValue.ReplaceModifiersAndAdd"
                                        ElementName="CustomKeysListBox"
                                        Converter="{x:Static helpers:FlagsToBooleanConverter.I}"
                                        ConverterParameter="LeftShift"
                                        Mode="TwoWay"
                                        UpdateSourceTrigger="PropertyChanged">
                                    </Binding>
                                </CheckBox.IsChecked>
                            </CheckBox>
                            <CheckBox
                                Style="{DynamicResource CheckBoxStyle}"
                                Content="R Shift">
                                <CheckBox.IsChecked>
                                    <Binding
                                        Path="SelectedValue.ReplaceModifiersAndAdd"
                                        ElementName="CustomKeysListBox"
                                        Converter="{x:Static helpers:FlagsToBooleanConverter.I}"
                                        ConverterParameter="RightShift"
                                        Mode="TwoWay"
                                        UpdateSourceTrigger="PropertyChanged">
                                    </Binding>
                                </CheckBox.IsChecked>
                            </CheckBox>
                        </StackPanel>
                    </Canvas>
                </Border>
                <Border
                    DockPanel.Dock="Top"
                    Style="{DynamicResource KeySettingPanelStyle}">
                    <Canvas>
                        <TextBlock
                            Canvas.Top="18"
                            Canvas.Left="20"
                            Text="Customizing"/>
                        <Button
                            x:Name="CustomKeyRemoveButton"
                            Style="{DynamicResource BaseButtonStyle}"
                            Width="150"
                            Canvas.Left="250"
                            Canvas.Top="13"
                            Click="CustomKeyRemoveButton_Click">
                            <TextBlock
                                Margin="4"
                                HorizontalAlignment="Center"
                                Text="Remove"/>
                        </Button>
                    </Canvas>
                </Border>
            </DockPanel>
        </GroupBox>

        <TextBox
            x:Name="AddCustomKeyTextBox"
            VerticalAlignment="Bottom"
            Cursor="Arrow"
            CaretBrush="Transparent"
            InputMethod.IsInputMethodEnabled="False"
            GotFocus="AddCustomKeyTextBox_GotFocus"
            LostKeyboardFocus="AddCustomKeyTextBox_LostKeyboardFocus"
            PreviewKeyUp="AddCustomKeyTextBox_PreviewKeyUp"
            Style="{DynamicResource AddCustomKeyTextBoxStyle}"
            Text="Press the key you want to customize."
            />
        <StackPanel
            Grid.Column="1"
            Margin="5"
            VerticalAlignment="Bottom"
            HorizontalAlignment="Right"
            Orientation="Horizontal">
            <Button
                x:Name="OkButton"
                Style="{DynamicResource BaseButtonStyle}"
                Width="100"
                Margin="0, 0, 5, 5"
                Click="OkButton_Click">
                <TextBlock
                    Margin="4"
                    HorizontalAlignment="Center"
                    Text="OK"/>
            </Button>
            <Button
                x:Name="CancelButtton"
                Style="{DynamicResource BaseButtonStyle}"
                Width="100"
                Margin="0, 0, 5, 5"
                Click="CancelButtton_Click">
                <TextBlock
                    Margin="4"
                    HorizontalAlignment="Center"
                    Text="Cancel"/>
            </Button>
            <Button
                x:Name="ApplyButton"
                Style="{DynamicResource BaseButtonStyle}"
                Background="{DynamicResource ButtonBackground}"
                Width="100"
                Margin="0, 0, 5, 5"
                Click="ApplyButton_Click">
                <TextBlock
                    Margin="4"
                    HorizontalAlignment="Center"
                    Text="Apply"/>
            </Button>
        </StackPanel>
    </Grid>
</Window>
